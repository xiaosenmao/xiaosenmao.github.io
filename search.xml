<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker启动MongoDB容器</title>
      <link href="/2021/07/10/docker-qi-dong-mongodb-rong-qi/"/>
      <url>/2021/07/10/docker-qi-dong-mongodb-rong-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><h4 id="参考官网介绍-docker-compose安装"><a href="#参考官网介绍-docker-compose安装" class="headerlink" title="参考官网介绍 docker-compose安装"></a>参考官网介绍 <a href="https://docs.docker.com/compose/install/">docker-compose安装</a></h4><blockquote><ol><li>下载docker-compose：<code>curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose</code></li><li>赋予执行权限：<code>chmod +x /usr/local/bin/docker-compose</code></li><li>测试是否安装成功：<code>docker --version</code></li></ol></blockquote><h2 id="使用docker-compose启动MongoDB容器"><a href="#使用docker-compose启动MongoDB容器" class="headerlink" title="使用docker-compose启动MongoDB容器"></a>使用docker-compose启动MongoDB容器</h2><ol><li>比如在home目录下新建mongotest目录并且进入该目录: <code>mkdir /home/mongotest &amp;&amp; cd /home/mongotest</code></li><li>新建 docker-compose.yml文件: <code>vim docker-compose.yml</code></li><li>写入以下内容<figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mongo:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MONGO_INITDB_ROOT_USERNAME:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">MONGO_INITDB_ROOT_PASSWORD:</span> <span class="string">example</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="number">27017</span><span class="string">:27017</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">/home/mongotest:/data/db</span></span><br></pre></td></tr></tbody></table></figure></li><li>执行命令： <code>docker-compose up -d</code> 启动一个容器<br><img src="/images/20210710200605.png"></li><li>查看docker容器：<code>docker ps -a</code></li><li>在docker里使用mongo的shell工具连接mongo服务：<code>docker exec -it mongotest_mongo_1 mongo</code></li><li>新建testdb数据库： <code>use testdb</code></li><li>创建一个 dbOwner 角色的用户<br><img src="/images/20210710213257.png"></li><li>进行一些操作<br><img src="/images/20210710221634.png"></li><li>使用GUI工具Robo3T连接成功,注意防火墙放行27017端口，同时注意云服务器的防火墙端口放行规则<br><img src="/images/20210710232119.png"><br><img src="/images/20210710232206.png"></li></ol><h2 id="MongDB的备份和恢复"><a href="#MongDB的备份和恢复" class="headerlink" title="MongDB的备份和恢复"></a>MongDB的备份和恢复</h2><h4 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h4><ol><li>执行： <code>docker ps | grep mongotest</code>查看检索mongo容器</li><li>备份：<code>docker exec -it mongotest_mongo_1 mongodump -h localhost -u root -p example -o /tmp/test</code><blockquote><p>-h == –host MongoDB所在服务器地址<br>-u == –username<br>-p == –password<br>-o == –out 指定BSON保存到的目录<br><img src="/images/20210710234354.png"></p></blockquote></li><li>将容器中的数据备份文件拷贝到宿主机上: <code>docker cp e499c3459fbd:/tmp/test /tmp/test</code></li><li>查看结果： <code>cd /tmp &amp;&amp; ls</code><br><img src="/images/20210710234913.png"><h4 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h4></li><li>执行 <code>docker exec -it mongotest_mongo_1 mongorestore -h localhost -u root -p example --dir /tmp/test</code></li></ol><h2 id="Mongoose操作数据"><a href="#Mongoose操作数据" class="headerlink" title="Mongoose操作数据"></a>Mongoose操作数据</h2><ol><li>客户端安装nodejs，初始化一个node项目</li><li>安装 mongoose, 执行 <code>npm install -S mongoose</code></li><li>新建 app.js 文件，写入如下内容</li><li>执行 <code>node app.js</code><br><img src="/images/20210712175256.png"></li><li>使用Robo 3T查看结果<br><img src="/images/20210712181446.png"></li><li>至此最基本的MongoDb连接和操作都已完成，更多的用法可以浏览相关文档。<blockquote><p><a href="https://nodejs.org/en/docs/">NodeJS 文档</a><br><a href="https://mongoosejs.com/docs/">Mongoose 文档</a></p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS系统中使用Docker启动MySQL</title>
      <link href="/2021/07/10/centos-xi-tong-zhong-shi-yong-docker-qi-dong-mysql/"/>
      <url>/2021/07/10/centos-xi-tong-zhong-shi-yong-docker-qi-dong-mysql/</url>
      
        <content type="html"><![CDATA[<h3 id="一、Docker安装"><a href="#一、Docker安装" class="headerlink" title="一、Docker安装"></a>一、Docker安装</h3><blockquote><p>安装docker可以参考<a href="https://docs.docker.com/engine/install">官方文档</a></p><ol><li>安装完成后查看docker进程状态,执行命令：<code>systemctl status docker</code>,结果为：<strong>inactive</strong><br><img src="/images/docker%E7%8A%B6%E6%80%81.png"></li><li>接下来启动docker进程，执行命令：<code>systemctl start docker</code><br><img src="/images/docker%E5%90%AF%E5%8A%A8%E5%90%8E.png"></li><li>下载测试hello-world镜像并在容器中运行。当容器运行时，它会打印一条信息性消息并退出。 执行命令：<code>docker run hello-world</code><br><img src="/images/dockerhelloworld.png"></li></ol></blockquote><h3 id="二、Docker启动MySQL"><a href="#二、Docker启动MySQL" class="headerlink" title="二、Docker启动MySQL"></a>二、Docker启动MySQL</h3><blockquote><ol><li>执行命令：<code>docker run --name mysql-demo1 -e MYSQL_ROOT_PASSWORD=123456 -p 3306:3306 -d mysql</code>结果如下图所示<blockquote><p><code>--name</code>指定容器名称为 mysql-demo1<br><code>-e</code>设置环境变量,设置MySQL服务root用户的密码<br><code>-p</code>映射容器服务的3306端口到宿主机的3306端口，这样外部主机可以直接通过宿主机ip:3306访问到MySQL的服务。（前面的3306为宿主机端口，后面的3306是docker容器中mysql服务的端口）<br><code>-d</code>设置后台运行<br><img src="/images/docker-mysql-demo1.png"></p></blockquote></li><li>使用客户端工具Navicat连接容器中的mysql<br>如果出现如下错误,可以尝试如下解决方法<br><img src="/images/20210709014246.png"><blockquote><ul><li>进入容器启动mysql,执行：<code>docker exec -it mysql-demo1</code>，接着下图操作执行</li><li><img src="/images/20210709015648.png"></li><li>再次使用Navicate尝试连接，提示连接成功</li><li>如下图：</li><li><img src="/images/20210709020057.png"></li></ul></blockquote></li></ol></blockquote><h3 id="三、结尾"><a href="#三、结尾" class="headerlink" title="三、结尾"></a>三、结尾</h3><blockquote><p>更过关于Docker的介绍和用法请查阅相关资料：</p><blockquote><ol><li><a href="https://www.docker.com/">Docker官网</a></li><li><a href="https://github.com/docker">Docker官方github</a></li><li><a href="https://www.docker.org.cn/index.html">Docker资源 - docker中文社区</a></li></ol></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2021/07/10/di-yi-pian-bo-ke/"/>
      <url>/2021/07/10/di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>“It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way— in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.”<br>― Charles Dickens, A Tale of Two Cities</p><!-- ![Charles Dickens](/images/CharlesDickens.jpg "Charles Dickens") --><p>译文：<br>“那是最美好的时代，那是最糟糕的时代；那是智慧的年月，那是愚昧的年月；那是信仰的时期，那是怀疑的时期；那是光明的季节，那是黑暗的季节；那是希望的春天，那是失望的冬天；我们都在直奔天堂，我们全都在直下地狱——简而言之，那时跟现在非常相象，某些最喧嚣的权威坚持要用形容词的最高级来形容它。说它好，是最高级的；说它不好，也是最高级的。”<br>― 查尔斯·狄更斯，双城记</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
